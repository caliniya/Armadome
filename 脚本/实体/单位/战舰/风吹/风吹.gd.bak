extends Node2D

@export var 核心容量 : float = 1000
@export var 装甲容量 : float = 1000
@export var 护甲值 : float = 20
@export var 护盾容量 : float = 1000
@export var 最大速度 : float =10
@export var 标准转向速度 : float = 1
@export var 标准加速度 : float = 1
@export var 标准减速度 : float = 1
@export var 货仓容量 : float = 100
@export var 自身质量 : float = 10000
@export var 扫描范围 : float = 500
@export var 储能上限 : float = 10000
@export var 回充速率 : float = 1000
@export var 能量栅格 : float = 2000
@export var 能量屏蔽 : float = 0.2
@export var 穿甲抗性 : float = 0.2
@export var 穿透抗性 : float = 0.2
@export var 回复速度 : float = 200
@export var 破盾延迟 : float = 5
@export var 护盾耗能 : float = 100
@export var 跳跃速度 : float = 10

var 加速度 : float
var 减速度 : float
var 转向速度 : float
var 负重速度 : float

var 选中 : bool

@export var 货仓装载体积 : float = 0
@export var 货仓装载质量 : float = 0
@export var 货仓货物 : Array = []


func _ready() -> void:
	pass

func _process(delta: float) -> void:
	pass

func _physics_process(delta: float) -> void:
	加速度 = (标准加速度 * (自身质量/(自身质量 + 货仓装载质量)))
	减速度 = (标准减速度 * (自身质量/(自身质量 + 货仓装载质量)))
	转向速度 = (标准转向速度 * (自身质量/(自身质量 + 货仓装载质量)))
	负重速度 = (最大速度 * (自身质量/(自身质量 + 货仓装载质量)))
	#print(负重速度)
	
func 装甲受击(伤害 : float,穿甲指数 : float) -> void:
	if 穿甲抗性 * 2 < 穿甲指数:
		核心受击(伤害)
	elif 穿甲抗性 < 穿甲指数:
		装甲容量 =- (穿甲抗性/穿甲指数) * 伤害
		核心受击((1 - (穿甲抗性/穿甲指数)) * 伤害)
	elif  穿甲抗性 > 穿甲指数:
		装甲容量 =- 伤害
	elif 穿甲抗性 > 穿甲指数 * 2:
		装甲容量 =- 伤害 * 0.5

func 核心受击(伤害 : float) -> void:
	核心容量 =- 伤害
